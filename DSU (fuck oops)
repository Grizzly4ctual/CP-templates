Path Compression + Union by Rank

struct dsu {
    vector<int>par;
    vector<int>size;

    void init(int n) {
        par.resize(n+1);
        size.resize(n+1,1);
        for (int i=1;i<n+1;i++) {
            par[i]=i;
        }
    }
    int find(int n) {
        if (par[n]==n) {
            return n;
        }
        return par[n]=find(par[n]);
    }
    void join(int a,int b) {
        a=find(a);
        b=find(b);
        if (a!=b) {
            if (size[a]<size[b]) {
                swap(a,b);
            }
            par[b]=a;
            size[a]+=size[b];
        }
    }
};
